{
    "swagger": "2.0",
    "info": {
        "description": "API server for the Konnect Platform",
        "title": "Konnect",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/v1",
    "paths": {
        "/services": {
            "get": {
                "description": "Gets all the services available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get All services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name, supports searching the passed string in the name of the service",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for the list of services. Accepted values are asc and desc. Default is desc(assumes default on invalid values as well)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The field on which sorting to be applied, supports name, created_at, updated_at. Default is updated_at(assumes default on invalid values as well)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (0-based). Default is 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page. Default is 10, max is 100, assumes 100 if \u003e100 is passed",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Additional data to include (comma-separated). Supported values: versionCount",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResult-models_Service"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create a service",
                "parameters": [
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateServiceForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "description": "Gets the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Additional data to include (comma-separated). Supported values: versionCount",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateServiceForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/{serviceId}/versions": {
            "get": {
                "description": "Gets all the versions available for the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceVersion"
                ],
                "summary": "Get All versions of a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "version, supports searching with version prefix, for example: passing 1 would return versions like 1.0.1,1.1.4 etc, passing 1.0 would return 1.0.3,1.0.7 etc",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for the list of service versions. Accepted values are asc and desc. Default is desc(assumes default on invalid values as well)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The field on which sorting to be applied, supports version, created_at, updated_at. Default is updated_at(assumes default on invalid values as well)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (0-based). Default is 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page. Default is 10, max is 100, assumes 100 if \u003e100 is passed",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResult-models_ServiceVersion"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a version for the specified service\nversion value must be a semantic version and releaseTimestamp must be valid RFC3339 timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceVersion"
                ],
                "summary": "Create a version for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ServiceVersion",
                        "name": "serviceVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateServiceVersionForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVersion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/{serviceId}/versions/{id}": {
            "get": {
                "description": "Get particular version by id for the specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceVersion"
                ],
                "summary": "Get a version of a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVersion"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified version of a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceVersion"
                ],
                "summary": "Delete a version for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the specified version of a service, version tag cannot be updated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceVersion"
                ],
                "summary": "Update a version for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ServiceVersion",
                        "name": "serviceVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UpdateServiceVersionForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVersion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.CreateServiceForm": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "forms.CreateServiceVersionForm": {
            "type": "object",
            "required": [
                "description",
                "version"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "releaseTimestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "forms.UpdateServiceVersionForm": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "releaseTimestamp": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                },
                "traceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.PaginatedResult-models_Service": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Service"
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "currentPage": {
                            "type": "integer"
                        },
                        "nextPage": {
                            "type": "integer"
                        },
                        "totalCount": {
                            "type": "integer"
                        },
                        "totalPages": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.PaginatedResult-models_ServiceVersion": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceVersion"
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "currentPage": {
                            "type": "integer"
                        },
                        "nextPage": {
                            "type": "integer"
                        },
                        "totalCount": {
                            "type": "integer"
                        },
                        "totalPages": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "gorm:\"\u003c-:create\" only allows create and read but not update\nthis is avoid updating created_at with a zero value by mistake",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/models.ServiceMetadata"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ServiceMetadata": {
            "type": "object",
            "properties": {
                "versionCount": {
                    "type": "integer"
                }
            }
        },
        "models.ServiceVersion": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "gorm:\"\u003c-:create\" only allows create and read but not update\nthis is avoid updating created_at with a zero value by mistake",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "releaseTimestamp": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}